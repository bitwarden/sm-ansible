name: Publish to Ansible Galaxy
run-name: Publish to Ansible Galaxy - ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Dry Run

jobs:
  validate:
    name: Setup
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get version
        id: version
        run: |
          VERSION=$(cat galaxy.yml | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+")
          echo "version=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  publish:
    name: Publish
    runs-on: ubuntu-22.04
    needs: validate
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Retrieve github PAT secrets
        id: retrieve-secret-pat
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "bitwarden-ci"
          secrets: "ansible-galaxy-api-key"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade ansible

      - name: Build Ansible Collection
        run: ansible-galaxy collection build . --force

      - name: Create release
        if: ${{ inputs.release_type != 'Dry Run' }}
        uses: ncipollo/release-action@cdcc88a9acf3ca41c16c37bb7d21b9ad48560d87 # v1.15.0
        with:
          tag: v${{ needs.validate.outputs.version }}
          name: v${{ needs.validate.outputs.version }}
          body: "<insert release notes here>"
          draft: true
          artifacts: bitwarden-secrets-${{ needs.validate.outputs.version }}.tar.gz

      - name: Publish to Ansible Galaxy
        if: ${{ inputs.release_type != 'Dry Run' }}
        env:
          _VERSION: ${{ needs.validate.outputs.version }}
        run: |
          ansible-galaxy collection publish --token ${{ steps.retrieve-secret-pat.outputs.ansible-galaxy-api-key }} \
            bitwarden-secrets-$_VERSION.tar.gz
